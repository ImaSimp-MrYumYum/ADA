name: Run All Python Scripts (per-file outputs)

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: write
  pull-requests: write

jobs:
  run-python:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || 'main' }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        shell: bash
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run each .py and write per-file outputs
        shell: bash
        run: |
          set -eo pipefail
          echo "Repo root:"; pwd
          echo "Python version:"; python --version || python3 --version || true
          while IFS= read -r -d '' pyfile; do
            out="${pyfile}.out.md"
            mkdir -p "$(dirname "$out")"
            # Write header and opening fence without using literal ``` lines
            printf "# Output for %s\n\n" "$pyfile" > "$out"
            printf "%s\n" '```'
            # Run script, capture exit code, avoid failing the job
            if command -v python >/dev/null 2>&1; then
              set +e; python "$pyfile" >> "$out" 2>&1; rc=$?; set -e
            else
              set +e; python3 "$pyfile" >> "$out" 2>&1; rc=$?; set -e
            fi
            printf "\n(exit code: %d)\n" "$rc" >> "$out"
            printf "%s\n" '```' >> "$out"
            echo "Wrote $out"
          done < <(find . -type f -name "*.py" -not -path "./.venv/*" -print0)

      - name: Verify generated outputs
        shell: bash
        run: |
          echo "Changed files:"
          git status --porcelain
          echo "Listing outputs:"
          find . -type f -name "*.py.out.md" -not -path "./.venv/*" -print

      - name: Commit outputs to main
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          commit_message: "chore: update per-file Python outputs"
          file_pattern: "**/*.py.out.md"
          disable_globbing: true

      - name: Create/update PR with outputs
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "chore: update per-file Python outputs"
          title: "Update per-file Python outputs"
          body: "Automated update of .py.out.md files."
          branch: ci/update-python-outputs
          base: main
          labels: ci, automation
          add-paths: |
            **/*.py.out.md
